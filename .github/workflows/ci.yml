name: CI Pipeline
on:
  pull_request:
    types: [opened, edited, reopened, synchronize, review_requested]
    branches:
      - develop

  pull_request_review:
    types: [submitted]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: |
          pip install pytest  
          pytest --junitxml=report.xml

  # review-check:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Code Review Check for develop
  #       uses: actions/github-script@v6
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         script: |
  #           const prNumber = context.payload.pull_request?.number;
  #           if (!prNumber) {
  #             core.setFailed("Не вдалося отримати номер PR");
  #             return;
  #           }
  #
  #           const { data: reviews } = await github.rest.pulls.listReviews({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             pull_number: prNumber
  #           });
  #
  #           const approved = reviews.some(review => review.state === 'APPROVED');
  #
  #           if (!approved) {
  #             core.setFailed("Код-рев’ю не схвалено");
  #           }

  analysis:
    runs-on: ubuntu-latest
    #needs: review-check
    steps:
      # - name: Ensure Java 17 is used
      #   run: |
      #     echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))" >> $GITHUB_ENV
      #     echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV
      #     java -version  # Перевіряємо, яка Java використовується
      
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Count lines of code with Cloc
        run: |
          sudo apt-get update
          sudo apt-get install -y cloc
          cloc src/ > cloc-report.txt
          cat cloc-report.txt

      # - name: Run SonarQube analysis
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
      #     unzip sonar-scanner-cli-4.8.0.2856-linux.zip
      #     export PATH=$JAVA_HOME/bin:$(pwd)/sonar-scanner-4.8.0.2856-linux/bin:$PATH
      #     export JAVA_HOME  # Переконуємось, що SonarScanner використовує Java 17
      #     sonar-scanner -X \
      #       -Dsonar.projectKey=MtPro \
      #       -Dsonar.organization=my-org \
      #       -Dsonar.host.url=https://sonarcloud.io \
      #       -Dsonar.login=$SONAR_TOKEN

      - name: Запуск flake8 через Reviewdog
        uses: reviewdog/action-flake8@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review

      - name: Запуск Black через Reviewdog
        uses: reviewdog/action-black@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          level: info
